/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.micromanager.rapp.MultiFOV;


//import GeneralClasses.FOV;
//import GeneralClasses.IjClasses;
//import GeneralClasses.VariousClasses;
//import ThreadingClasses.SnapDisplayImage;

import ij.IJ;
import ij.ImagePlus;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

import mmcorej.CMMCore;
import org.micromanager.MMStudio;

/**
 *
 * @author Frederik
 */
public class BLframe extends javax.swing.JFrame {

    public static BLframe getInstance() {
        return frame_;
    }
    public Thread SnapDisplayImage;
    public VariousClasses VariousClasses_;
    public IjClasses IjClasses_;
    public CMMCore core_;
    private MMStudio gui_;  // Might be useful to put in at some point? ### WAS DISABLED
    private static BLframe frame_;
    
    wellMap wMap_;
    TableModel tableModel_;
    URL defaultpath = this.getClass().getResource("");
    String dpath = defaultpath.toString();
    JTable xPosTable_;
    /**
     * Creates new form BLframe
     */
    public BLframe(CMMCore core) {
        initComponents();
        setDefault();
        VariousClasses_ = VariousClasses.getInstance();
        IjClasses_ = IjClasses.getInstance();
        
        dpath= dpath.substring(6);
        ImageIcon icon = new ImageIcon(dpath.concat("Resources/LaserGun.PNG"));
        this.setIconImage(icon.getImage());
//      ImageIcon icon = new ImageIcon(this.getClass().getResource("../Resources/GFPFishIcon.png"));
//      this.setIconImage(icon.getImage());
        this.setTitle("BloodLust");
        core_ = core;
        // Leaking this in constructor may lead to trouble in multithreaded situations?
        // Can these be moved to another method? Looks like it, but can be left for another day...
        frame_ = this;

        gui_ = MMStudio.getInstance(); // ### WAS MMStudio gui_ = MMStudio.getInstance(); 
        gui_.registerForEvents(this);
        
        // Add confirm dialog when window closed using x
        frame_.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frame_.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                confirmQuit();
            }
        });
        //setControlDefaults();
    }

        private void confirmQuit() {
        int n = JOptionPane.showConfirmDialog(frame_,
                "Quit: are you sure?", "Quit", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        UniversalTestButton = new javax.swing.JButton();
        LiveButton = new javax.swing.JToggleButton();
        exposureTimeField = new javax.swing.JTextField();
        exposureTimeLABEL = new javax.swing.JLabel();
        simulateImageButton = new javax.swing.JButton();
        readROIsButton = new javax.swing.JButton();
        FindCellsButton = new javax.swing.JButton();
        tabBasePanel = new javax.swing.JPanel();
        tabPanels = new javax.swing.JTabbedPane();
        xYZPanel1 = new XYZPanel();
        wellMapPanel = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UniversalTestButton.setText("UniversalTest");
        UniversalTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UniversalTestButtonActionPerformed(evt);
            }
        });

        LiveButton.setText("Live");
        LiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiveButtonActionPerformed(evt);
            }
        });

        exposureTimeField.setText("200");
        exposureTimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exposureTimeFieldActionPerformed(evt);
            }
        });

        exposureTimeLABEL.setText("Exposure time [Âµs]");

        simulateImageButton.setText("Simulate image");
        simulateImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulateImageButtonActionPerformed(evt);
            }
        });

        readROIsButton.setText("read ROIs");
        readROIsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readROIsButtonActionPerformed(evt);
            }
        });

        FindCellsButton.setText("Find cells");
        FindCellsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindCellsButtonActionPerformed(evt);
            }
        });

        tabBasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("BasePanel"));

        tabPanels.addTab("XYZ control", xYZPanel1);

        javax.swing.GroupLayout wellMapPanelLayout = new javax.swing.GroupLayout(wellMapPanel);
        wellMapPanel.setLayout(wellMapPanelLayout);
        wellMapPanelLayout.setHorizontalGroup(
            wellMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        wellMapPanelLayout.setVerticalGroup(
            wellMapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tabBasePanelLayout = new javax.swing.GroupLayout(tabBasePanel);
        tabBasePanel.setLayout(tabBasePanelLayout);
        tabBasePanelLayout.setHorizontalGroup(
            tabBasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabBasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabBasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wellMapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabPanels, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE))
                .addContainerGap())
        );
        tabBasePanelLayout.setVerticalGroup(
            tabBasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabBasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wellMapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("mulitPageTiff");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exposureTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exposureTimeLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LiveButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UniversalTestButton)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(readROIsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(simulateImageButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FindCellsButton))
                    .addComponent(jButton2))
                .addGap(36, 36, 36)
                .addComponent(tabBasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(LiveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exposureTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exposureTimeLABEL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simulateImageButton)
                    .addComponent(FindCellsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readROIsButton)
                .addGap(62, 62, 62)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UniversalTestButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabBasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UniversalTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UniversalTestButtonActionPerformed
        ArrayList<FOV> preFovs = new ArrayList<FOV>(XYZPanel.tableModel_.getData());
        
    }//GEN-LAST:event_UniversalTestButtonActionPerformed

    private void LiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiveButtonActionPerformed
        // open new Thread for snap Image

        SnapDisplayImage = new Thread(new SnapDisplayImage(this));
        SnapDisplayImage.start();

    }//GEN-LAST:event_LiveButtonActionPerformed

    private void exposureTimeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exposureTimeFieldActionPerformed
        double expTime = Double.parseDouble(exposureTimeField.getText());
        try {
            core_.setExposure(expTime);
        } catch (Exception ex) {
            Logger.getLogger(BLframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exposureTimeFieldActionPerformed

    private void simulateImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulateImageButtonActionPerformed
        //VariousClasses_.showSimImage(dpath.concat("Resources/simCell2DPNG.PNG"));
        ImagePlus image = IJ.openImage(dpath.concat("Resources/simCell2DPNG.PNG"));
        image.show();
    }//GEN-LAST:event_simulateImageButtonActionPerformed

    private void readROIsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readROIsButtonActionPerformed
        IjClasses_.getROIs();
    }//GEN-LAST:event_readROIsButtonActionPerformed

    private void FindCellsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindCellsButtonActionPerformed
        IjClasses_.findCells();
    }//GEN-LAST:event_FindCellsButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       IjClasses_.makeMultiTiffImageJ();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int tI = 22;
        byte b1= (byte) tI;
        System.out.println(tI);
        System.out.println(b1);
    }//GEN-LAST:event_jButton1ActionPerformed

     public void liveDisplayThread(){
         while(LiveButton.isSelected()){
            VariousClasses_.setLive(LiveButton.isSelected());
        }
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FindCellsButton;
    private javax.swing.JToggleButton LiveButton;
    private javax.swing.JButton UniversalTestButton;
    private javax.swing.JTextField exposureTimeField;
    private javax.swing.JLabel exposureTimeLABEL;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton readROIsButton;
    private javax.swing.JButton simulateImageButton;
    private javax.swing.JPanel tabBasePanel;
    private javax.swing.JTabbedPane tabPanels;
    private javax.swing.JPanel wellMapPanel;
    private XYZPanel xYZPanel1;
    // End of variables declaration//GEN-END:variables


    private void setDefault() {
        setPreferredSize(new Dimension(1000, 1000));
        wMap_ = new wellMap(this);
        wellMapPanel.setLayout(new BorderLayout());
        wellMapPanel.add(wMap_, BorderLayout.CENTER);
        wellMapPanel.setSize(192, 192);
    }
}

